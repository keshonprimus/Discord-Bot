import os
import discord
import requests
import json
import random
from replit import db
from keep_bot_running import keep_alive


client = discord.Client()

sad_words_list = ["sad","suicide", "depressed", "unhappy", "angry", "depressing"]

starter_encouragements = ["Cheer up mate!", "Hey, hang in there, pal.", "I think you're a great person, and I know everything!", "Don't be sad bc sad reversed is das and das not good.", "Pls don't be sad or angry human :("]

curse_words = ["fuck", "pussy", "shit", "ass", "puta", "bitch", "motherfucker", "asshole", "asswipe", "shithole", "bitchass", "cunt", "fuckboy", "dumbass", "faggot", "dyke"]

watch_language = ["***** Watch your language! *****", "***** You're on thin ice with your language, buddy. *****", "***** Warning:  Explicit language not allowed in this server. *****", "***** Please do not curse in this server. *****", "***** Was that word really necessary? *****", "***** That was really uncalled for, not gonna lie. *****", "***** Calm down, bro. *****", "***** Warning: You will be removed from the server if you continue to use foul language. *****"]

jokes_list = ["I want to be cremated as it is my last hope for a smoking hot body.", "What kind of concert only costs 45 cents? A 50 Cent concert featuring Nickelback.", "What did the oven say to the chicken? \"I can’t wait to have you inside me.\"", "Need an ark to save two of every animal? I noah guy", "I don’t trust stairs. They’re always up to something.", "What is my favourite thing about my grandpa? His life insurance", "I ordered a chicken and an egg from Amazon. I'll let you know which come first.", "How does Moses make his coffee? Hebrews it.", "I wish Covid-19 had started in Las Vegas. Because what happens in Vegas stays in Vegas."]

if "responding" not in db.keys():
  db["responding"] = True

def get_quote():
  response = requests.get("https://zenquotes.io/api/random")
  json_data = json.loads(response.text)
  quote = json_data[0]['q'] + " -" + json_data[0]['a']
  return(quote)

def update_encouragements(encouraging_message):
  if "encouragements" in db.keys():
    encouragements = db["encouragements"]
    encouragements.append(encouraging_message)
    db["encouragements"] = encouragements
  else:
    db["encouragements"] = [encouraging_message]

def delete_encouragment(index):
  encouragements = db["encouragements"]
  if len(encouragements) > index:
    del encouragements[index]
    db["encouragements"] = encouragements

@client.event
async def on_ready():
  print('We have logged in as {0.user}'.format(client))
  
@client.event
async def on_ready():
  print("Logged in as {0.user}".format(client))

@client.event
async def on_message(message):
  if message.author == client.user:
    return
  
  if message.content.startswith('$hello') or message.content.startswith("$hi"):
    await message.channel.send('Hello')
  
  if any(word in message.content for word in curse_words):
    await message.channel.send(random.choice(watch_language))
  
  if message.content.startswith('$tell me a joke'):
    await message.channel.send(random.choice(jokes_list))
  
  if message.content.startswith('$inspire me'):
    quote = get_quote()
    await message.channel.send(quote)

  if db["responding"]:
    options = starter_encouragements
    if "encouragements" in db.keys():
      options.append(db["encouragements"])

    if any(word in message.content for word in sad_words_list):
      await message.channel.send(random.choice(starter_encouragements))

  if message.content.startswith("$new"):
    encouraging_message = message.content.split("$new ",1)[1]
    update_encouragements(encouraging_message)
    await message.channel.send("New encouraging message added.")

  if message.content.startswith("$del"):
    encouragements = []
    if "encouragements" in db.keys():
      index = int(message.content.split("$del",1)[1])
      delete_encouragment(index)
      encouragements = db["encouragements"]
    await message.channel.send(encouragements)
  
  if message.content.startswith("$list"):
    encouragements = []
    if "encouragements" in db.keys():
      encouragements = db["encouragements"]
    await message.channel.send(encouragements)

  if message.content.startswith("$responding"):
    value = message.content.split("$responding ",1)[1]

    if value.lower() == "on":
      db["responding"] = True
      await message.channel.send("Responses turned on.")
    if value.lower() == "off":
      db["responding"] = False
      await message.channel.send("Responses turned off.")

keep_alive()
client.run(os.environ['TOKEN'])
